from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
    ConversationHandler,
)

import os
import logging

# -------------------------
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
# -------------------------
ASK_NAME, ASK_CONTACT = range(2)  # —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞

ADMIN_ID = 245084180  # ID —á–∞—Ç–∞ (–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è), –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞—è–≤–∫–∏
BOT_TOKEN = os.getenv(
    "BOT_TOKEN", "8006999841:AAGXnOqWhfE35TU8IyIhc6Q17PjHkK_M3dk"
)  # –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–Ω–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!
POLICY_URL = "https://example.com/privacy-policy"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)


# -------------------------
# –•—ç–Ω–¥–ª–µ—Ä—ã –±–æ—Ç–∞
# -------------------------
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –¥–∏–∞–ª–æ–≥."""
    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø ‚Äì –≤–∞—à –±–æ—Ç‚Äë–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ —Å—É–¥–µ–±–Ω–æ–º—É –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤—É.\n"
        "–ü—Ä–µ–¥–ª–∞–≥–∞—é –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –ø–µ—Ä–≤–∏—á–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∏ —á–µ—Å—Ç–Ω—É—é —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é –ø–æ–º–æ—â—å.\n"
        "–ú—ã –Ω–µ –æ–±–µ—â–∞–µ–º 100‚ÄØ% —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞, –Ω–æ –Ω–∞—à –æ–ø—ã—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –ø—Ä–∏ –ø–æ–ª–Ω–æ–º —Å–æ–±–ª—é–¥–µ–Ω–∏–∏ –≤—Å–µ—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π —Å—É–¥–∞ "
        "–±–æ–ª–µ–µ 99,8‚ÄØ% –¥–µ–ª –∑–∞–≤–µ—Ä—à–∞—é—Ç—Å—è —É—Å–ø–µ—à–Ω–æ.\n\n"
        "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é:"
    )
    return ASK_NAME


async def ask_name(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç."""
    context.user_data["name"] = update.message.text.strip()

    await update.message.reply_text(
        "–°–ø–∞—Å–∏–±–æ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏.\n"
        "–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –≤—ã –¥–∞—ë—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–∞—à–µ–π "
        f"[–ü–æ–ª–∏—Ç–∏–∫–µ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏]({POLICY_URL}).",
        reply_markup=ReplyKeyboardMarkup(
            [[KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç ‚òéÔ∏è", request_contact=True)]],
            resize_keyboard=True,
            one_time_keyboard=True,
        ),
        parse_mode="Markdown",
    )
    return ASK_CONTACT


async def ask_contact(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü–æ–ª—É—á–∞–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –∞–¥–º–∏–Ω—É."""
    contact = update.message.contact
    phone = contact.phone_number if contact else update.message.text.strip()
    context.user_data["phone"] = phone

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    admin_message = (
        "üì® *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ*\n"
        f"üë§ –ò–º—è: {context.user_data['name']}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
        f"üÜî Telegram ID –∫–ª–∏–µ–Ω—Ç–∞: {update.effective_user.id}"
    )

    try:
        await context.bot.send_message(
            chat_id=ADMIN_ID, text=admin_message, parse_mode="Markdown"
        )
    except Exception as err:
        logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É: %s", err)

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text(
        "–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.\n"
        "–£—á—Ç–∏—Ç–µ, —á—Ç–æ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –∏ —Ä–µ—à–µ–Ω–∏—è —Å—É–¥–∞, "
        "–Ω–æ –º—ã —Å–¥–µ–ª–∞–µ–º –≤—Å—ë –≤–æ–∑–º–æ–∂–Ω–æ–µ –¥–ª—è –∑–∞—â–∏—Ç—ã –≤–∞—à–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤.",
        reply_markup=ReplyKeyboardRemove(),
    )
    return ConversationHandler.END


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü—Ä–µ—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    await update.message.reply_text(
        "–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å. –ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ /start.",
        reply_markup=ReplyKeyboardRemove(),
    )
    return ConversationHandler.END


# -------------------------
# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# -------------------------

def main() -> None:
    """–°–æ–∑–¥–∞—ë–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ."""
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            ASK_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_name)],
            ASK_CONTACT: [
                MessageHandler(
                    (filters.CONTACT | filters.TEXT) & ~filters.COMMAND, ask_contact
                )
            ],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv_handler)

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏—è‚Ä¶")
    app.run_polling()


if __name__ == "__main__":
    main()
